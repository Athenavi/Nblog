worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 优化参数
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip 压缩
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 服务器配置
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;
        client_max_body_size 10M;

        # 静态文件服务
        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
            access_log off;
            add_header Cache-Control "public";
        }

        # 媒体文件服务
        location /media/ {
            alias /app/media/;
            expires 30d;
            access_log off;
            add_header Cache-Control "public";
        }

        # 代理 Django 应用
        location / {
            proxy_pass http://django:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_read_timeout 300;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # 错误页面
        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /app/templates/;
            internal;
        }

        # 健康检查
        location /health/ {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }
}